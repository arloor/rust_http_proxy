[package]
name = "rust_http_proxy"
version = "0.1.5"
rust-version = "1.80.0"
edition = "2021"
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
hyper = { version = "1", features = ["full"] }
tokio.workspace = true
http-body-util = "0.1"
hyper-util = { version = "0.1", features = ["tokio", "server-auto"] }
rustls-pemfile = "2"
tokio-rustls = { version = "0.26", features = [
    "logging",
    "tls12",
], default-features = false }
futures-util.workspace = true
log.workspace = true
rand = "0.8"
tokio-util = "0.7"
mime_guess = "2.0"
httpdate = "1.0"
percent-encoding = "2.2"
chrono = "0.4"
pin-project-lite.workspace = true
prometheus-client.workspace = true
flate2 = { version = "1.0" }
async-compression = { version = "0.4", features = ["tokio", "gzip"] }
clap = { version = "4.4", features = ["derive"] }
base64 = "0.22"
socket2 = "0.5"
jemallocator = { version = "0.5", optional = true }
regex = "1"
log_x = { path = "../log_x" }
io_x = { path = "../io_x" }
prom_label = { path = "../prom_label" }
hyper-rustls = { version = "0.27", default-features = false, features = [
    "rustls-platform-verifier",
    "http2",
    "native-tokio",
    "http1",
    "logging",
] }
http = "1"
lru_time_cache = "0.11"
serde_yaml = "0.9"
serde = { version = "1.0", features = ["derive"] }

[target.'cfg(target_os = "linux")'.dependencies]
socket_filter = { version = "0.2", optional = true }
cgroup_traffic = { version = "0.2", optional = true }
pnet = { version = "0.35", optional = true }

[features]
default = ["ring"]
jemalloc = ["jemallocator"]
bpf = ["socket_filter", "cgroup_traffic"]
bpf_vendored = ["bpf", "socket_filter/vendored", "cgroup_traffic/vendored"]
bpf_static = ["bpf", "socket_filter/static", "cgroup_traffic/static"]
aws_lc_rs = ["tokio-rustls/aws-lc-rs", "hyper-rustls/aws-lc-rs"]
ring = ["tokio-rustls/ring", "hyper-rustls/ring"]
